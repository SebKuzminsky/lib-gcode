
;
; This subroutine helix-mills male threads into a circular boss at the
; specified location, of the specified minor (inner) diameter and depth and
; pitch, then retracts the cutter to a specifed Z level.
;
; Uses regular cutting (cutter to the right of the work)
;
; Arg 1: X coordinate of center of boss
; Arg 2: Y coordinate of center of boss
; Arg 3: minor diameter of thread (cut this deep)
; Arg 4: Z coordinate at top of workpiece (start cutting here)
; Arg 5: Z increment (this gets added to the Z coord once per revolution)
; Arg 6: Z coordinate at bottom of thread (thread may stop up to one Z increment before this)
; Arg 7: Retract Z level
; Arg 8: X coord of retract move
; Arg 9: Y coord of retract move
;
; The motion is:
;
;     0.  Rapid to the retract Z level.
;
;     1.  Rapid X and Y to the vincinity of the hole.
;
;     2.  Cutter comp entry move, positioning the cutter outside the boss,
;         tangent to the right side of the boss: X=[CenterX + Radius],
;         Y=CenterY
;
;     3.  Rapid Z to the start of the cut.
;
;     4.  Helix mill clockwise down the boss, going DepthPerRev down for
;         each complete circle around the boss.  Go until you get so deep
;         that doing one more complete rev would put the final Z below the
;         Z bottom argument.
;
;     5.  Feed to retract X Y coordinate
;
;     6.  Rapid to the retract Z level.
;

o<thread-mill-male-0> sub
    #<CenterX> = #1
    #<CenterY> = #2
    #<Diameter> = #3

    #<StartZ> = #4
    #<ZIncrement> = #5
    #<BottomZ> = #6
    #<RetractZ> = #7

    #<RetractX> = #8
    #<RetractY> = #9

    #<Radius> = [#<Diameter>/2]

    g90.1 ; arc centers are absolute

    g0 z#<RetractZ>
    g0 x[#<CenterX> + #<Radius>] y[#<CenterY> + .5]
    g41 ; cutter comp on, left of path (climb milling)

    g0 x[#<CenterX> + #<Radius>] y#<CenterY>
    g0 z#<StartZ>

    #<CurrentZ> = [#<StartZ> + #<ZIncrement>]

    o100 while [#<CurrentZ> GT #<BottomZ>]
        g2 i#<CenterX> j#<CenterY> z#<CurrentZ>

        #<CurrentZ> = [#<CurrentZ> + #<ZIncrement>]
    o100 endwhile

    g40 ; cutter comp off

    g1 x#<RetractX> y#<RetractY>   ; cutter comp exit move, move the cutter to the retract position
    g0 z#<RetractZ>  ; retract cutter
o<thread-mill-male-0> endsub

m2


